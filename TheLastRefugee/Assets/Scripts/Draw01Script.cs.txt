using UnityEngine;

public class DrawerController : MonoBehaviour
{
    public float moveDistance = 0.7f;
    public float moveSpeed = 2.0f;
    private bool isDrawerOpen = false;
    private Transform targetDrawer;
    private Vector3 initialPosition;
    private Vector3 openPosition;

    void Update()
    {
        if (Input.GetMouseButtonDown(0))
        {
            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
            RaycastHit hit;

            if (Physics.Raycast(ray, out hit, 5.05f))
            {
                Debug.Log("Hit object: " + hit.collider.name); // Log the hit object

                // Check if the hit object is a drawer or a parent of drawers
                Transform hitTransform = hit.collider.transform;
                if (hitTransform.CompareTag("draw01"))
                {
                    HandleDrawer(hitTransform);
                }
                else if (hitTransform.parent != null && hitTransform.parent.CompareTag("draw01"))
                {
                    HandleDrawer(hitTransform.parent);
                }
                else
                {
                    Debug.Log("Hit object is not a drawer.");
                    Debug.Log("Ray hit object: " + hit.collider.name + ", Tag: " + hit.collider.tag);

                }
            }
        }
    }

    private void HandleDrawer(Transform drawerTransform)
    {
        targetDrawer = drawerTransform;
        initialPosition = targetDrawer.position;
        openPosition = initialPosition + new Vector3(0, 0, moveDistance);

        StopAllCoroutines(); // Stop any ongoing movement
        StartCoroutine(MoveDrawer(isDrawerOpen ? initialPosition : openPosition));
        isDrawerOpen = !isDrawerOpen;
    }

    private System.Collections.IEnumerator MoveDrawer(Vector3 targetPosition)
    {
        float elapsedTime = 0;
        Vector3 startingPosition = targetDrawer.position;

        while (elapsedTime < moveSpeed)
        {
            targetDrawer.position = Vector3.Lerp(startingPosition, targetPosition, (elapsedTime / moveSpeed));
            elapsedTime += Time.deltaTime;
            yield return null;
        }

        targetDrawer.position = targetPosition;
    }
}
